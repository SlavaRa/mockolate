<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<flexLibProperties includeAllClasses="true" useMultiPlatformConfig="false" version="3">
  <includeClasses>
    <classEntry path="mockolate.capture"/>
    <classEntry path="mockolate.decorations.Decorator"/>
    <classEntry path="mockolate.decorations.EventDispatcherDecorator"/>
    <classEntry path="mockolate.decorations.InvocationDecorator"/>
    <classEntry path="mockolate.decorations.rpc.FaultAnswer"/>
    <classEntry path="mockolate.decorations.rpc.HTTPServiceDecorator"/>
    <classEntry path="mockolate.decorations.rpc.ResultAnswer"/>
    <classEntry path="mockolate.errors.CaptureError"/>
    <classEntry path="mockolate.errors.ExpectationError"/>
    <classEntry path="mockolate.errors.InvocationError"/>
    <classEntry path="mockolate.errors.MockolateError"/>
    <classEntry path="mockolate.errors.VerificationError"/>
    <classEntry path="mockolate.expect"/>
    <classEntry path="mockolate.expectArg"/>
    <classEntry path="mockolate.ingredients.AbstractInvocation"/>
    <classEntry path="mockolate.ingredients.AbstractMockolateFactory"/>
    <classEntry path="mockolate.ingredients.Capture"/>
    <classEntry path="mockolate.ingredients.CaptureMatcher"/>
    <classEntry path="mockolate.ingredients.CaptureType"/>
    <classEntry path="mockolate.ingredients.ClassRecipe"/>
    <classEntry path="mockolate.ingredients.ClassRecipeBuilder"/>
    <classEntry path="mockolate.ingredients.ClassRecipes"/>
    <classEntry path="mockolate.ingredients.Couverture"/>
    <classEntry path="mockolate.ingredients.Expectation"/>
    <classEntry path="mockolate.ingredients.ExpectingCouverture"/>
    <classEntry path="mockolate.ingredients.IMockingCouverture"/>
    <classEntry path="mockolate.ingredients.IMockingGetterCouverture"/>
    <classEntry path="mockolate.ingredients.IMockingMethodCouverture"/>
    <classEntry path="mockolate.ingredients.IMockingSetterCouverture"/>
    <classEntry path="mockolate.ingredients.IMockolateFactory"/>
    <classEntry path="mockolate.ingredients.InstanceRecipe"/>
    <classEntry path="mockolate.ingredients.InstanceRecipeBuilder"/>
    <classEntry path="mockolate.ingredients.InstanceRecipes"/>
    <classEntry path="mockolate.ingredients.Invocation"/>
    <classEntry path="mockolate.ingredients.InvocationType"/>
    <classEntry path="mockolate.ingredients.InvocationsMatcher"/>
    <classEntry path="mockolate.ingredients.MockType"/>
    <classEntry path="mockolate.ingredients.MockingCouverture"/>
    <classEntry path="mockolate.ingredients.MockingCouvertureProxy"/>
    <classEntry path="mockolate.ingredients.MockingGetterCouverture"/>
    <classEntry path="mockolate.ingredients.MockingSetterCouverture"/>
    <classEntry path="mockolate.ingredients.Mockolate"/>
    <classEntry path="mockolate.ingredients.Mockolatier"/>
    <classEntry path="mockolate.ingredients.MockolatierMaster"/>
    <classEntry path="mockolate.ingredients.RecordingCouverture"/>
    <classEntry path="mockolate.ingredients.Sequence"/>
    <classEntry path="mockolate.ingredients.VerifyingCouverture"/>
    <classEntry path="mockolate.ingredients.aClassRecipe"/>
    <classEntry path="mockolate.ingredients.anInstanceRecipe"/>
    <classEntry path="mockolate.ingredients.answers.Answer"/>
    <classEntry path="mockolate.ingredients.answers.CallsAnswer"/>
    <classEntry path="mockolate.ingredients.answers.CallsSuperAnswer"/>
    <classEntry path="mockolate.ingredients.answers.CallsWithInvocationAnswer"/>
    <classEntry path="mockolate.ingredients.answers.DispatchesEventAnswer"/>
    <classEntry path="mockolate.ingredients.answers.MethodInvokingAnswer"/>
    <classEntry path="mockolate.ingredients.answers.ReturnsAnswer"/>
    <classEntry path="mockolate.ingredients.answers.ReturnsCallAnswer"/>
    <classEntry path="mockolate.ingredients.answers.ReturnsValueAnswer"/>
    <classEntry path="mockolate.ingredients.answers.ThrowsAnswer"/>
    <classEntry path="mockolate.ingredients.bytecode.BytecodeProxyInterceptor"/>
    <classEntry path="mockolate.ingredients.bytecode.BytecodeProxyInvocation"/>
    <classEntry path="mockolate.ingredients.bytecode.BytecodeProxyMockolate"/>
    <classEntry path="mockolate.ingredients.bytecode.BytecodeProxyMockolateFactory"/>
    <classEntry path="mockolate.ingredients.constraints.Constraint"/>
    <classEntry path="mockolate.ingredients.constraints.InSequenceOrderingConstraint"/>
    <classEntry path="mockolate.ingredients.faux.FauxFloxyInterceptor"/>
    <classEntry path="mockolate.ingredients.faux.FauxFloxyInvocation"/>
    <classEntry path="mockolate.ingredients.faux.FauxInvocation"/>
    <classEntry path="mockolate.ingredients.faux.FauxMockolate"/>
    <classEntry path="mockolate.ingredients.faux.FauxMockolatier"/>
    <classEntry path="mockolate.ingredients.floxy.FloxyInvocation"/>
    <classEntry path="mockolate.ingredients.floxy.FloxyMockolate"/>
    <classEntry path="mockolate.ingredients.floxy.FloxyMockolateFactory"/>
    <classEntry path="mockolate.ingredients.floxy.InterceptingCouverture"/>
    <classEntry path="mockolate.ingredients.mockolate_ingredient"/>
    <classEntry path="mockolate.ingredients.proxy.MockolateProxy"/>
    <classEntry path="mockolate.ingredients.proxy.ProxyInvocation"/>
    <classEntry path="mockolate.ingredients.proxy.ProxyMockolateFactory"/>
    <classEntry path="mockolate.ingredients.valueToMatcher"/>
    <classEntry path="mockolate.make"/>
    <classEntry path="mockolate.mock"/>
    <classEntry path="mockolate.nice"/>
    <classEntry path="mockolate.partial"/>
    <classEntry path="mockolate.prepare"/>
    <classEntry path="mockolate.received"/>
    <classEntry path="mockolate.record"/>
    <classEntry path="mockolate.replay"/>
    <classEntry path="mockolate.runner.MockMetadata"/>
    <classEntry path="mockolate.runner.MockMetadataFactory"/>
    <classEntry path="mockolate.runner.MockolateRule"/>
    <classEntry path="mockolate.runner.MockolateRunner"/>
    <classEntry path="mockolate.runner.MockolateRunnerConstants"/>
    <classEntry path="mockolate.runner.MockolateRunnerData"/>
    <classEntry path="mockolate.runner.MockolateRunnerStatement"/>
    <classEntry path="mockolate.runner.statements.IdentifyMockClasses"/>
    <classEntry path="mockolate.runner.statements.InjectMockInstances"/>
    <classEntry path="mockolate.runner.statements.PrepareMockClasses"/>
    <classEntry path="mockolate.runner.statements.VerifyMockInstances"/>
    <classEntry path="mockolate.sequence"/>
    <classEntry path="mockolate.strict"/>
    <classEntry path="mockolate.stub"/>
    <classEntry path="mockolate.verify"/>
  </includeClasses>
  <includeResources/>
  <namespaceManifests/>
</flexLibProperties>
